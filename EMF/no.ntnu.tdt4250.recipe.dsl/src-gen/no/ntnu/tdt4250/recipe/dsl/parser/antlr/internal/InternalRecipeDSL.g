/*
 * generated by Xtext 2.36.0
 */
grammar InternalRecipeDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package no.ntnu.tdt4250.recipe.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package no.ntnu.tdt4250.recipe.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import no.ntnu.tdt4250.recipe.dsl.services.RecipeDSLGrammarAccess;

}

@parser::members {

 	private RecipeDSLGrammarAccess grammarAccess;

    public InternalRecipeDSLParser(TokenStream input, RecipeDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Page";
   	}

   	@Override
   	protected RecipeDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePage
entryRulePage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPageRule()); }
	iv_rulePage=rulePage
	{ $current=$iv_rulePage.current; }
	EOF;

// Rule Page
rulePage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Page'
		{
			newLeafNode(otherlv_0, grammarAccess.getPageAccess().getPageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPageAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPageRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPageAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getPageAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPageAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPageAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='instructions'
								{
									newLeafNode(otherlv_4, grammarAccess.getPageAccess().getInstructionsKeyword_3_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPageAccess().getInstructionsInstructionsParserRuleCall_3_0_1_0());
										}
										lv_instructions_5_0=ruleInstructions
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPageRule());
											}
											set(
												$current,
												"instructions",
												lv_instructions_5_0,
												"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Instructions");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPageAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPageAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPageAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_6='ingredients'
								{
									newLeafNode(otherlv_6, grammarAccess.getPageAccess().getIngredientsKeyword_3_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPageAccess().getIngredientsIngredientsParserRuleCall_3_1_1_0());
										}
										lv_ingredients_7_0=ruleIngredients
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPageRule());
											}
											set(
												$current,
												"ingredients",
												lv_ingredients_7_0,
												"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Ingredients");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPageAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPageAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPageAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>(otherlv_8='header'
								{
									newLeafNode(otherlv_8, grammarAccess.getPageAccess().getHeaderKeyword_3_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPageAccess().getHeaderHeaderParserRuleCall_3_2_1_0());
										}
										lv_header_9_0=ruleHeader
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPageRule());
											}
											set(
												$current,
												"header",
												lv_header_9_0,
												"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Header");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPageAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPageAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPageAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>(otherlv_10='nutrients'
								{
									newLeafNode(otherlv_10, grammarAccess.getPageAccess().getNutrientsKeyword_3_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPageAccess().getNutrientsNutrientsParserRuleCall_3_3_1_0());
										}
										lv_nutrients_11_0=ruleNutrients
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPageRule());
											}
											set(
												$current,
												"nutrients",
												lv_nutrients_11_0,
												"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Nutrients");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPageAccess().getUnorderedGroup_3());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getPageAccess().getUnorderedGroup_3())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getPageAccess().getUnorderedGroup_3());
				}
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getPageAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleInstructions
entryRuleInstructions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionsRule()); }
	iv_ruleInstructions=ruleInstructions
	{ $current=$iv_ruleInstructions.current; }
	EOF;

// Rule Instructions
ruleInstructions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Instructions'
		{
			newLeafNode(otherlv_0, grammarAccess.getInstructionsAccess().getInstructionsKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getInstructionsAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='orderNumber'
		{
			newLeafNode(otherlv_2, grammarAccess.getInstructionsAccess().getOrderNumberKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInstructionsAccess().getOrderNumberEIntParserRuleCall_3_0());
				}
				lv_orderNumber_3_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstructionsRule());
					}
					set(
						$current,
						"orderNumber",
						lv_orderNumber_3_0,
						"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getInstructionsAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleIngredients
entryRuleIngredients returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIngredientsRule()); }
	iv_ruleIngredients=ruleIngredients
	{ $current=$iv_ruleIngredients.current; }
	EOF;

// Rule Ingredients
ruleIngredients returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Ingredients'
		{
			newLeafNode(otherlv_0, grammarAccess.getIngredientsAccess().getIngredientsKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getIngredientsAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getIngredientsAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIngredientsAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIngredientsAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>(otherlv_3='orderNumber'
								{
									newLeafNode(otherlv_3, grammarAccess.getIngredientsAccess().getOrderNumberKeyword_2_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getIngredientsAccess().getOrderNumberEIntParserRuleCall_2_0_1_0());
										}
										lv_orderNumber_4_0=ruleEInt
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getIngredientsRule());
											}
											set(
												$current,
												"orderNumber",
												lv_orderNumber_4_0,
												"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.EInt");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIngredientsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIngredientsAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIngredientsAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>(otherlv_5='unittoggle'
								{
									newLeafNode(otherlv_5, grammarAccess.getIngredientsAccess().getUnittoggleKeyword_2_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getIngredientsAccess().getUnittoggleUnitOfMeasureParserRuleCall_2_1_1_0());
										}
										lv_unittoggle_6_0=ruleUnitOfMeasure
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getIngredientsRule());
											}
											set(
												$current,
												"unittoggle",
												lv_unittoggle_6_0,
												"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.UnitOfMeasure");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIngredientsAccess().getUnorderedGroup_2());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getIngredientsAccess().getUnorderedGroup_2())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getIngredientsAccess().getUnorderedGroup_2());
				}
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getIngredientsAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleHeader
entryRuleHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeaderRule()); }
	iv_ruleHeader=ruleHeader
	{ $current=$iv_ruleHeader.current; }
	EOF;

// Rule Header
ruleHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Header'
		{
			newLeafNode(otherlv_0, grammarAccess.getHeaderAccess().getHeaderKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getHeaderAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getHeaderAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getHeaderAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getHeaderAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>(otherlv_3='basicinformation'
								{
									newLeafNode(otherlv_3, grammarAccess.getHeaderAccess().getBasicinformationKeyword_2_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getHeaderAccess().getBasicinformationBasicInformationParserRuleCall_2_0_1_0());
										}
										lv_basicinformation_4_0=ruleBasicInformation
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getHeaderRule());
											}
											set(
												$current,
												"basicinformation",
												lv_basicinformation_4_0,
												"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.BasicInformation");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getHeaderAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getHeaderAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getHeaderAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>(otherlv_5='recipetitle'
								{
									newLeafNode(otherlv_5, grammarAccess.getHeaderAccess().getRecipetitleKeyword_2_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getHeaderAccess().getRecipetitleTitleParserRuleCall_2_1_1_0());
										}
										lv_recipetitle_6_0=ruleTitle
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getHeaderRule());
											}
											set(
												$current,
												"recipetitle",
												lv_recipetitle_6_0,
												"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Title");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getHeaderAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getHeaderAccess().getUnorderedGroup_2(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getHeaderAccess().getUnorderedGroup_2(), 2);
					}
								({true}?=>(otherlv_7='image'
								{
									newLeafNode(otherlv_7, grammarAccess.getHeaderAccess().getImageKeyword_2_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getHeaderAccess().getImageImageParserRuleCall_2_2_1_0());
										}
										lv_image_8_0=ruleImage
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getHeaderRule());
											}
											set(
												$current,
												"image",
												lv_image_8_0,
												"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Image");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getHeaderAccess().getUnorderedGroup_2());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getHeaderAccess().getUnorderedGroup_2())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getHeaderAccess().getUnorderedGroup_2());
				}
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getHeaderAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleNutrients
entryRuleNutrients returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNutrientsRule()); }
	iv_ruleNutrients=ruleNutrients
	{ $current=$iv_ruleNutrients.current; }
	EOF;

// Rule Nutrients
ruleNutrients returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Nutrients'
		{
			newLeafNode(otherlv_0, grammarAccess.getNutrientsAccess().getNutrientsKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getNutrientsAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getNutrientsAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNutrientsAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNutrientsAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>(otherlv_3='orderNumber'
								{
									newLeafNode(otherlv_3, grammarAccess.getNutrientsAccess().getOrderNumberKeyword_2_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getNutrientsAccess().getOrderNumberEIntParserRuleCall_2_0_1_0());
										}
										lv_orderNumber_4_0=ruleEInt
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getNutrientsRule());
											}
											set(
												$current,
												"orderNumber",
												lv_orderNumber_4_0,
												"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.EInt");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNutrientsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNutrientsAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNutrientsAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>(otherlv_5='percentagetoggle'
								{
									newLeafNode(otherlv_5, grammarAccess.getNutrientsAccess().getPercentagetoggleKeyword_2_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getNutrientsAccess().getPercentagetogglePercentageAmountToggleParserRuleCall_2_1_1_0());
										}
										lv_percentagetoggle_6_0=rulePercentageAmountToggle
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getNutrientsRule());
											}
											set(
												$current,
												"percentagetoggle",
												lv_percentagetoggle_6_0,
												"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.PercentageAmountToggle");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNutrientsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNutrientsAccess().getUnorderedGroup_2(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNutrientsAccess().getUnorderedGroup_2(), 2);
					}
								({true}?=>(otherlv_7='vitamins'
								{
									newLeafNode(otherlv_7, grammarAccess.getNutrientsAccess().getVitaminsKeyword_2_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getNutrientsAccess().getVitaminsVitaminsParserRuleCall_2_2_1_0());
										}
										lv_vitamins_8_0=ruleVitamins
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getNutrientsRule());
											}
											set(
												$current,
												"vitamins",
												lv_vitamins_8_0,
												"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Vitamins");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNutrientsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNutrientsAccess().getUnorderedGroup_2(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNutrientsAccess().getUnorderedGroup_2(), 3);
					}
								({true}?=>(otherlv_9='macronutrients'
								{
									newLeafNode(otherlv_9, grammarAccess.getNutrientsAccess().getMacronutrientsKeyword_2_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getNutrientsAccess().getMacronutrientsMacronutrientsParserRuleCall_2_3_1_0());
										}
										lv_macronutrients_10_0=ruleMacronutrients
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getNutrientsRule());
											}
											set(
												$current,
												"macronutrients",
												lv_macronutrients_10_0,
												"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Macronutrients");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNutrientsAccess().getUnorderedGroup_2());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getNutrientsAccess().getUnorderedGroup_2())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getNutrientsAccess().getUnorderedGroup_2());
				}
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getNutrientsAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleUnitOfMeasure
entryRuleUnitOfMeasure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitOfMeasureRule()); }
	iv_ruleUnitOfMeasure=ruleUnitOfMeasure
	{ $current=$iv_ruleUnitOfMeasure.current; }
	EOF;

// Rule UnitOfMeasure
ruleUnitOfMeasure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnitOfMeasureAccess().getUnitOfMeasureAction_0(),
					$current);
			}
		)
		otherlv_1='UnitOfMeasure'
		{
			newLeafNode(otherlv_1, grammarAccess.getUnitOfMeasureAccess().getUnitOfMeasureKeyword_1());
		}
	)
;

// Entry rule entryRuleBasicInformation
entryRuleBasicInformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicInformationRule()); }
	iv_ruleBasicInformation=ruleBasicInformation
	{ $current=$iv_ruleBasicInformation.current; }
	EOF;

// Rule BasicInformation
ruleBasicInformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBasicInformationAccess().getBasicInformationAction_0(),
					$current);
			}
		)
		otherlv_1='BasicInformation'
		{
			newLeafNode(otherlv_1, grammarAccess.getBasicInformationAccess().getBasicInformationKeyword_1());
		}
	)
;

// Entry rule entryRuleTitle
entryRuleTitle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTitleRule()); }
	iv_ruleTitle=ruleTitle
	{ $current=$iv_ruleTitle.current; }
	EOF;

// Rule Title
ruleTitle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTitleAccess().getTitleAction_0(),
					$current);
			}
		)
		otherlv_1='Title'
		{
			newLeafNode(otherlv_1, grammarAccess.getTitleAccess().getTitleKeyword_1());
		}
	)
;

// Entry rule entryRuleImage
entryRuleImage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageRule()); }
	iv_ruleImage=ruleImage
	{ $current=$iv_ruleImage.current; }
	EOF;

// Rule Image
ruleImage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getImageAccess().getImageAction_0(),
					$current);
			}
		)
		otherlv_1='Image'
		{
			newLeafNode(otherlv_1, grammarAccess.getImageAccess().getImageKeyword_1());
		}
	)
;

// Entry rule entryRulePercentageAmountToggle
entryRulePercentageAmountToggle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPercentageAmountToggleRule()); }
	iv_rulePercentageAmountToggle=rulePercentageAmountToggle
	{ $current=$iv_rulePercentageAmountToggle.current; }
	EOF;

// Rule PercentageAmountToggle
rulePercentageAmountToggle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPercentageAmountToggleAccess().getPercentageAmountToggleAction_0(),
					$current);
			}
		)
		otherlv_1='PercentageAmountToggle'
		{
			newLeafNode(otherlv_1, grammarAccess.getPercentageAmountToggleAccess().getPercentageAmountToggleKeyword_1());
		}
	)
;

// Entry rule entryRuleVitamins
entryRuleVitamins returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVitaminsRule()); }
	iv_ruleVitamins=ruleVitamins
	{ $current=$iv_ruleVitamins.current; }
	EOF;

// Rule Vitamins
ruleVitamins returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Vitamins'
		{
			newLeafNode(otherlv_0, grammarAccess.getVitaminsAccess().getVitaminsKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getVitaminsAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='Vitamin'
		{
			newLeafNode(otherlv_2, grammarAccess.getVitaminsAccess().getVitaminKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getVitaminsAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVitaminsAccess().getVitaminVitaminEnumRuleCall_4_0());
				}
				lv_Vitamin_4_0=ruleVitamin
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVitaminsRule());
					}
					add(
						$current,
						"Vitamin",
						lv_Vitamin_4_0,
						"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Vitamin");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getVitaminsAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVitaminsAccess().getVitaminVitaminEnumRuleCall_5_1_0());
					}
					lv_Vitamin_6_0=ruleVitamin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVitaminsRule());
						}
						add(
							$current,
							"Vitamin",
							lv_Vitamin_6_0,
							"no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Vitamin");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getVitaminsAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getVitaminsAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleMacronutrients
entryRuleMacronutrients returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMacronutrientsRule()); }
	iv_ruleMacronutrients=ruleMacronutrients
	{ $current=$iv_ruleMacronutrients.current; }
	EOF;

// Rule Macronutrients
ruleMacronutrients returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMacronutrientsAccess().getMacronutrientsAction_0(),
					$current);
			}
		)
		otherlv_1='Macronutrients'
		{
			newLeafNode(otherlv_1, grammarAccess.getMacronutrientsAccess().getMacronutrientsKeyword_1());
		}
	)
;

// Rule Vitamin
ruleVitamin returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='VITAMIN_A'
			{
				$current = grammarAccess.getVitaminAccess().getVITAMIN_AEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVitaminAccess().getVITAMIN_AEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='VITAMIN_B1'
			{
				$current = grammarAccess.getVitaminAccess().getVITAMIN_B1EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVitaminAccess().getVITAMIN_B1EnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='VITAMIN_B2'
			{
				$current = grammarAccess.getVitaminAccess().getVITAMIN_B2EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVitaminAccess().getVITAMIN_B2EnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='VITAMIN_B3'
			{
				$current = grammarAccess.getVitaminAccess().getVITAMIN_B3EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getVitaminAccess().getVITAMIN_B3EnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='VITAMIN_B5'
			{
				$current = grammarAccess.getVitaminAccess().getVITAMIN_B5EnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getVitaminAccess().getVITAMIN_B5EnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='VITAMIN_B6'
			{
				$current = grammarAccess.getVitaminAccess().getVITAMIN_B6EnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getVitaminAccess().getVITAMIN_B6EnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='VITAMIN_B12'
			{
				$current = grammarAccess.getVitaminAccess().getVITAMIN_B12EnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getVitaminAccess().getVITAMIN_B12EnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='VITAMIN_C'
			{
				$current = grammarAccess.getVitaminAccess().getVITAMIN_CEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getVitaminAccess().getVITAMIN_CEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='VITAMIN_E'
			{
				$current = grammarAccess.getVitaminAccess().getVITAMIN_EEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getVitaminAccess().getVITAMIN_EEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='VITAMIN_K'
			{
				$current = grammarAccess.getVitaminAccess().getVITAMIN_KEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getVitaminAccess().getVITAMIN_KEnumLiteralDeclaration_9());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
