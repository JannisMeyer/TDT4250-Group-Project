/*
 * generated by Xtext 2.36.0
 */
package no.ntnu.tdt4250.recipe.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class RecipeDSLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class PageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Page");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cInstructionsKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cInstructionsAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cInstructionsInstructionsParserRuleCall_3_0_1_0 = (RuleCall)cInstructionsAssignment_3_0_1.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cIngredientsKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cIngredientsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cIngredientsIngredientsParserRuleCall_3_1_1_0 = (RuleCall)cIngredientsAssignment_3_1_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cHeaderKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cHeaderAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cHeaderHeaderParserRuleCall_3_2_1_0 = (RuleCall)cHeaderAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cNutrientsKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cNutrientsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cNutrientsNutrientsParserRuleCall_3_3_1_0 = (RuleCall)cNutrientsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Page returns Page:
		//    'Page'
		//    name=EString
		//    '{'
		//        // Using & to create an unordered group
		//        (
		//            ('instructions' instructions=Instructions) &
		//            ('ingredients' ingredients=Ingredients) &
		//            ('header' header=Header) &
		//            ('nutrients' nutrients=Nutrients)?
		//        )
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Page'
		//name=EString
		//'{'
		//    // Using & to create an unordered group
		//    (
		//        ('instructions' instructions=Instructions) &
		//        ('ingredients' ingredients=Ingredients) &
		//        ('header' header=Header) &
		//        ('nutrients' nutrients=Nutrients)?
		//    )
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Page'
		public Keyword getPageKeyword_0() { return cPageKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//// Using & to create an unordered group
		//(
		//    ('instructions' instructions=Instructions) &
		//    ('ingredients' ingredients=Ingredients) &
		//    ('header' header=Header) &
		//    ('nutrients' nutrients=Nutrients)?
		//)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//('instructions' instructions=Instructions)
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'instructions'
		public Keyword getInstructionsKeyword_3_0_0() { return cInstructionsKeyword_3_0_0; }
		
		//instructions=Instructions
		public Assignment getInstructionsAssignment_3_0_1() { return cInstructionsAssignment_3_0_1; }
		
		//Instructions
		public RuleCall getInstructionsInstructionsParserRuleCall_3_0_1_0() { return cInstructionsInstructionsParserRuleCall_3_0_1_0; }
		
		//('ingredients' ingredients=Ingredients)
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'ingredients'
		public Keyword getIngredientsKeyword_3_1_0() { return cIngredientsKeyword_3_1_0; }
		
		//ingredients=Ingredients
		public Assignment getIngredientsAssignment_3_1_1() { return cIngredientsAssignment_3_1_1; }
		
		//Ingredients
		public RuleCall getIngredientsIngredientsParserRuleCall_3_1_1_0() { return cIngredientsIngredientsParserRuleCall_3_1_1_0; }
		
		//('header' header=Header)
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'header'
		public Keyword getHeaderKeyword_3_2_0() { return cHeaderKeyword_3_2_0; }
		
		//header=Header
		public Assignment getHeaderAssignment_3_2_1() { return cHeaderAssignment_3_2_1; }
		
		//Header
		public RuleCall getHeaderHeaderParserRuleCall_3_2_1_0() { return cHeaderHeaderParserRuleCall_3_2_1_0; }
		
		//('nutrients' nutrients=Nutrients)?
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'nutrients'
		public Keyword getNutrientsKeyword_3_3_0() { return cNutrientsKeyword_3_3_0; }
		
		//nutrients=Nutrients
		public Assignment getNutrientsAssignment_3_3_1() { return cNutrientsAssignment_3_3_1; }
		
		//Nutrients
		public RuleCall getNutrientsNutrientsParserRuleCall_3_3_1_0() { return cNutrientsNutrientsParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class InstructionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Instructions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInstructionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cOrderNumberKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOrderNumberAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOrderNumberEIntParserRuleCall_3_0 = (RuleCall)cOrderNumberAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Instructions returns Instructions:
		//    'Instructions'
		//    '{'
		//        'orderNumber' orderNumber=EInt
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Instructions'
		//'{'
		//    'orderNumber' orderNumber=EInt
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Instructions'
		public Keyword getInstructionsKeyword_0() { return cInstructionsKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'orderNumber'
		public Keyword getOrderNumberKeyword_2() { return cOrderNumberKeyword_2; }
		
		//orderNumber=EInt
		public Assignment getOrderNumberAssignment_3() { return cOrderNumberAssignment_3; }
		
		//EInt
		public RuleCall getOrderNumberEIntParserRuleCall_3_0() { return cOrderNumberEIntParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class IngredientsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Ingredients");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIngredientsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cOrderNumberKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cOrderNumberAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cOrderNumberEIntParserRuleCall_2_0_1_0 = (RuleCall)cOrderNumberAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cUnittoggleKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cUnittoggleAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cUnittoggleUnitOfMeasureParserRuleCall_2_1_1_0 = (RuleCall)cUnittoggleAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Ingredients returns Ingredients:
		//    'Ingredients'
		//    '{'
		//        // Using & for unordered elements
		//        (
		//            ('orderNumber' orderNumber=EInt) &
		//            ('unittoggle' unittoggle=UnitOfMeasure)?
		//        )
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Ingredients'
		//'{'
		//    // Using & for unordered elements
		//    (
		//        ('orderNumber' orderNumber=EInt) &
		//        ('unittoggle' unittoggle=UnitOfMeasure)?
		//    )
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Ingredients'
		public Keyword getIngredientsKeyword_0() { return cIngredientsKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//// Using & for unordered elements
		//(
		//    ('orderNumber' orderNumber=EInt) &
		//    ('unittoggle' unittoggle=UnitOfMeasure)?
		//)
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('orderNumber' orderNumber=EInt)
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'orderNumber'
		public Keyword getOrderNumberKeyword_2_0_0() { return cOrderNumberKeyword_2_0_0; }
		
		//orderNumber=EInt
		public Assignment getOrderNumberAssignment_2_0_1() { return cOrderNumberAssignment_2_0_1; }
		
		//EInt
		public RuleCall getOrderNumberEIntParserRuleCall_2_0_1_0() { return cOrderNumberEIntParserRuleCall_2_0_1_0; }
		
		//('unittoggle' unittoggle=UnitOfMeasure)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'unittoggle'
		public Keyword getUnittoggleKeyword_2_1_0() { return cUnittoggleKeyword_2_1_0; }
		
		//unittoggle=UnitOfMeasure
		public Assignment getUnittoggleAssignment_2_1_1() { return cUnittoggleAssignment_2_1_1; }
		
		//UnitOfMeasure
		public RuleCall getUnittoggleUnitOfMeasureParserRuleCall_2_1_1_0() { return cUnittoggleUnitOfMeasureParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class HeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Header");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHeaderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cBasicinformationKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cBasicinformationAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cBasicinformationBasicInformationParserRuleCall_2_0_1_0 = (RuleCall)cBasicinformationAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cRecipetitleKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cRecipetitleAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cRecipetitleTitleParserRuleCall_2_1_1_0 = (RuleCall)cRecipetitleAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cImageKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cImageAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cImageImageParserRuleCall_2_2_1_0 = (RuleCall)cImageAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Header returns Header:
		//    'Header'
		//    '{'
		//        // Using & for unordered elements
		//        (
		//            ('basicinformation' basicinformation=BasicInformation) &
		//            ('recipetitle' recipetitle=Title) &
		//            ('image' image=Image)?
		//        )
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Header'
		//'{'
		//    // Using & for unordered elements
		//    (
		//        ('basicinformation' basicinformation=BasicInformation) &
		//        ('recipetitle' recipetitle=Title) &
		//        ('image' image=Image)?
		//    )
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Header'
		public Keyword getHeaderKeyword_0() { return cHeaderKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//// Using & for unordered elements
		//(
		//    ('basicinformation' basicinformation=BasicInformation) &
		//    ('recipetitle' recipetitle=Title) &
		//    ('image' image=Image)?
		//)
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('basicinformation' basicinformation=BasicInformation)
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'basicinformation'
		public Keyword getBasicinformationKeyword_2_0_0() { return cBasicinformationKeyword_2_0_0; }
		
		//basicinformation=BasicInformation
		public Assignment getBasicinformationAssignment_2_0_1() { return cBasicinformationAssignment_2_0_1; }
		
		//BasicInformation
		public RuleCall getBasicinformationBasicInformationParserRuleCall_2_0_1_0() { return cBasicinformationBasicInformationParserRuleCall_2_0_1_0; }
		
		//('recipetitle' recipetitle=Title)
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'recipetitle'
		public Keyword getRecipetitleKeyword_2_1_0() { return cRecipetitleKeyword_2_1_0; }
		
		//recipetitle=Title
		public Assignment getRecipetitleAssignment_2_1_1() { return cRecipetitleAssignment_2_1_1; }
		
		//Title
		public RuleCall getRecipetitleTitleParserRuleCall_2_1_1_0() { return cRecipetitleTitleParserRuleCall_2_1_1_0; }
		
		//('image' image=Image)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'image'
		public Keyword getImageKeyword_2_2_0() { return cImageKeyword_2_2_0; }
		
		//image=Image
		public Assignment getImageAssignment_2_2_1() { return cImageAssignment_2_2_1; }
		
		//Image
		public RuleCall getImageImageParserRuleCall_2_2_1_0() { return cImageImageParserRuleCall_2_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.recipe.dsl.RecipeDSL.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class NutrientsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Nutrients");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNutrientsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cOrderNumberKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cOrderNumberAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cOrderNumberEIntParserRuleCall_2_0_1_0 = (RuleCall)cOrderNumberAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cPercentagetoggleKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cPercentagetoggleAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cPercentagetogglePercentageAmountToggleParserRuleCall_2_1_1_0 = (RuleCall)cPercentagetoggleAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cVitaminsKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cVitaminsAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cVitaminsVitaminsParserRuleCall_2_2_1_0 = (RuleCall)cVitaminsAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cMacronutrientsKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cMacronutrientsAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cMacronutrientsMacronutrientsParserRuleCall_2_3_1_0 = (RuleCall)cMacronutrientsAssignment_2_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Nutrients returns Nutrients:
		//    'Nutrients'
		//    '{'
		//        // Using & for unordered elements
		//        (
		//            ('orderNumber' orderNumber=EInt) &
		//            ('percentagetoggle' percentagetoggle=PercentageAmountToggle)? &
		//            ('vitamins' vitamins=Vitamins)? &
		//            ('macronutrients' macronutrients=Macronutrients)?
		//        )
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Nutrients'
		//'{'
		//    // Using & for unordered elements
		//    (
		//        ('orderNumber' orderNumber=EInt) &
		//        ('percentagetoggle' percentagetoggle=PercentageAmountToggle)? &
		//        ('vitamins' vitamins=Vitamins)? &
		//        ('macronutrients' macronutrients=Macronutrients)?
		//    )
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Nutrients'
		public Keyword getNutrientsKeyword_0() { return cNutrientsKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//// Using & for unordered elements
		//(
		//    ('orderNumber' orderNumber=EInt) &
		//    ('percentagetoggle' percentagetoggle=PercentageAmountToggle)? &
		//    ('vitamins' vitamins=Vitamins)? &
		//    ('macronutrients' macronutrients=Macronutrients)?
		//)
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('orderNumber' orderNumber=EInt)
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'orderNumber'
		public Keyword getOrderNumberKeyword_2_0_0() { return cOrderNumberKeyword_2_0_0; }
		
		//orderNumber=EInt
		public Assignment getOrderNumberAssignment_2_0_1() { return cOrderNumberAssignment_2_0_1; }
		
		//EInt
		public RuleCall getOrderNumberEIntParserRuleCall_2_0_1_0() { return cOrderNumberEIntParserRuleCall_2_0_1_0; }
		
		//('percentagetoggle' percentagetoggle=PercentageAmountToggle)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'percentagetoggle'
		public Keyword getPercentagetoggleKeyword_2_1_0() { return cPercentagetoggleKeyword_2_1_0; }
		
		//percentagetoggle=PercentageAmountToggle
		public Assignment getPercentagetoggleAssignment_2_1_1() { return cPercentagetoggleAssignment_2_1_1; }
		
		//PercentageAmountToggle
		public RuleCall getPercentagetogglePercentageAmountToggleParserRuleCall_2_1_1_0() { return cPercentagetogglePercentageAmountToggleParserRuleCall_2_1_1_0; }
		
		//('vitamins' vitamins=Vitamins)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'vitamins'
		public Keyword getVitaminsKeyword_2_2_0() { return cVitaminsKeyword_2_2_0; }
		
		//vitamins=Vitamins
		public Assignment getVitaminsAssignment_2_2_1() { return cVitaminsAssignment_2_2_1; }
		
		//Vitamins
		public RuleCall getVitaminsVitaminsParserRuleCall_2_2_1_0() { return cVitaminsVitaminsParserRuleCall_2_2_1_0; }
		
		//('macronutrients' macronutrients=Macronutrients)?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'macronutrients'
		public Keyword getMacronutrientsKeyword_2_3_0() { return cMacronutrientsKeyword_2_3_0; }
		
		//macronutrients=Macronutrients
		public Assignment getMacronutrientsAssignment_2_3_1() { return cMacronutrientsAssignment_2_3_1; }
		
		//Macronutrients
		public RuleCall getMacronutrientsMacronutrientsParserRuleCall_2_3_1_0() { return cMacronutrientsMacronutrientsParserRuleCall_2_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.recipe.dsl.RecipeDSL.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class UnitOfMeasureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.recipe.dsl.RecipeDSL.UnitOfMeasure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUnitOfMeasureAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUnitOfMeasureKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//UnitOfMeasure returns UnitOfMeasure:
		//    {UnitOfMeasure}
		//    'UnitOfMeasure';
		@Override public ParserRule getRule() { return rule; }
		
		//{UnitOfMeasure}
		//'UnitOfMeasure'
		public Group getGroup() { return cGroup; }
		
		//{UnitOfMeasure}
		public Action getUnitOfMeasureAction_0() { return cUnitOfMeasureAction_0; }
		
		//'UnitOfMeasure'
		public Keyword getUnitOfMeasureKeyword_1() { return cUnitOfMeasureKeyword_1; }
	}
	public class BasicInformationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.recipe.dsl.RecipeDSL.BasicInformation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBasicInformationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBasicInformationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//BasicInformation returns BasicInformation:
		//    {BasicInformation}
		//    'BasicInformation';
		@Override public ParserRule getRule() { return rule; }
		
		//{BasicInformation}
		//'BasicInformation'
		public Group getGroup() { return cGroup; }
		
		//{BasicInformation}
		public Action getBasicInformationAction_0() { return cBasicInformationAction_0; }
		
		//'BasicInformation'
		public Keyword getBasicInformationKeyword_1() { return cBasicInformationKeyword_1; }
	}
	public class TitleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Title");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTitleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTitleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Title returns Title:
		//    {Title}
		//    'Title';
		@Override public ParserRule getRule() { return rule; }
		
		//{Title}
		//'Title'
		public Group getGroup() { return cGroup; }
		
		//{Title}
		public Action getTitleAction_0() { return cTitleAction_0; }
		
		//'Title'
		public Keyword getTitleKeyword_1() { return cTitleKeyword_1; }
	}
	public class ImageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Image");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cImageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cImageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Image returns Image:
		//    {Image}
		//    'Image';
		@Override public ParserRule getRule() { return rule; }
		
		//{Image}
		//'Image'
		public Group getGroup() { return cGroup; }
		
		//{Image}
		public Action getImageAction_0() { return cImageAction_0; }
		
		//'Image'
		public Keyword getImageKeyword_1() { return cImageKeyword_1; }
	}
	public class PercentageAmountToggleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.recipe.dsl.RecipeDSL.PercentageAmountToggle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPercentageAmountToggleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPercentageAmountToggleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//PercentageAmountToggle returns PercentageAmountToggle:
		//    {PercentageAmountToggle}
		//    'PercentageAmountToggle';
		@Override public ParserRule getRule() { return rule; }
		
		//{PercentageAmountToggle}
		//'PercentageAmountToggle'
		public Group getGroup() { return cGroup; }
		
		//{PercentageAmountToggle}
		public Action getPercentageAmountToggleAction_0() { return cPercentageAmountToggleAction_0; }
		
		//'PercentageAmountToggle'
		public Keyword getPercentageAmountToggleKeyword_1() { return cPercentageAmountToggleKeyword_1; }
	}
	public class VitaminsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Vitamins");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVitaminsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cVitaminKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVitaminAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVitaminVitaminEnumRuleCall_4_0 = (RuleCall)cVitaminAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cVitaminAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cVitaminVitaminEnumRuleCall_5_1_0 = (RuleCall)cVitaminAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Vitamins returns Vitamins:
		//    'Vitamins'
		//    '{'
		//        'Vitamin' '{' Vitamin+=Vitamin ( "," Vitamin+=Vitamin)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Vitamins'
		//'{'
		//    'Vitamin' '{' Vitamin+=Vitamin ( "," Vitamin+=Vitamin)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Vitamins'
		public Keyword getVitaminsKeyword_0() { return cVitaminsKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'Vitamin'
		public Keyword getVitaminKeyword_2() { return cVitaminKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//Vitamin+=Vitamin
		public Assignment getVitaminAssignment_4() { return cVitaminAssignment_4; }
		
		//Vitamin
		public RuleCall getVitaminVitaminEnumRuleCall_4_0() { return cVitaminVitaminEnumRuleCall_4_0; }
		
		//( "," Vitamin+=Vitamin)*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//Vitamin+=Vitamin
		public Assignment getVitaminAssignment_5_1() { return cVitaminAssignment_5_1; }
		
		//Vitamin
		public RuleCall getVitaminVitaminEnumRuleCall_5_1_0() { return cVitaminVitaminEnumRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class MacronutrientsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Macronutrients");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMacronutrientsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMacronutrientsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Macronutrients returns Macronutrients:
		//    {Macronutrients}
		//    'Macronutrients';
		@Override public ParserRule getRule() { return rule; }
		
		//{Macronutrients}
		//'Macronutrients'
		public Group getGroup() { return cGroup; }
		
		//{Macronutrients}
		public Action getMacronutrientsAction_0() { return cMacronutrientsAction_0; }
		
		//'Macronutrients'
		public Keyword getMacronutrientsKeyword_1() { return cMacronutrientsKeyword_1; }
	}
	
	public class VitaminElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "no.ntnu.tdt4250.recipe.dsl.RecipeDSL.Vitamin");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cVITAMIN_AEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cVITAMIN_AVITAMIN_AKeyword_0_0 = (Keyword)cVITAMIN_AEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cVITAMIN_B1EnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cVITAMIN_B1VITAMIN_B1Keyword_1_0 = (Keyword)cVITAMIN_B1EnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cVITAMIN_B2EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cVITAMIN_B2VITAMIN_B2Keyword_2_0 = (Keyword)cVITAMIN_B2EnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cVITAMIN_B3EnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cVITAMIN_B3VITAMIN_B3Keyword_3_0 = (Keyword)cVITAMIN_B3EnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cVITAMIN_B5EnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cVITAMIN_B5VITAMIN_B5Keyword_4_0 = (Keyword)cVITAMIN_B5EnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cVITAMIN_B6EnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cVITAMIN_B6VITAMIN_B6Keyword_5_0 = (Keyword)cVITAMIN_B6EnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cVITAMIN_B12EnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cVITAMIN_B12VITAMIN_B12Keyword_6_0 = (Keyword)cVITAMIN_B12EnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cVITAMIN_CEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cVITAMIN_CVITAMIN_CKeyword_7_0 = (Keyword)cVITAMIN_CEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cVITAMIN_EEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cVITAMIN_EVITAMIN_EKeyword_8_0 = (Keyword)cVITAMIN_EEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cVITAMIN_KEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cVITAMIN_KVITAMIN_KKeyword_9_0 = (Keyword)cVITAMIN_KEnumLiteralDeclaration_9.eContents().get(0);
		
		//enum Vitamin returns Vitamin:
		//    VITAMIN_A = 'VITAMIN_A' |
		//    VITAMIN_B1 = 'VITAMIN_B1' |
		//    VITAMIN_B2 = 'VITAMIN_B2' |
		//    VITAMIN_B3 = 'VITAMIN_B3' |
		//    VITAMIN_B5 = 'VITAMIN_B5' |
		//    VITAMIN_B6 = 'VITAMIN_B6' |
		//    VITAMIN_B12 = 'VITAMIN_B12' |
		//    VITAMIN_C = 'VITAMIN_C' |
		//    VITAMIN_E = 'VITAMIN_E' |
		//    VITAMIN_K = 'VITAMIN_K';
		public EnumRule getRule() { return rule; }
		
		//VITAMIN_A = 'VITAMIN_A' |
		//VITAMIN_B1 = 'VITAMIN_B1' |
		//VITAMIN_B2 = 'VITAMIN_B2' |
		//VITAMIN_B3 = 'VITAMIN_B3' |
		//VITAMIN_B5 = 'VITAMIN_B5' |
		//VITAMIN_B6 = 'VITAMIN_B6' |
		//VITAMIN_B12 = 'VITAMIN_B12' |
		//VITAMIN_C = 'VITAMIN_C' |
		//VITAMIN_E = 'VITAMIN_E' |
		//VITAMIN_K = 'VITAMIN_K'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//VITAMIN_A = 'VITAMIN_A'
		public EnumLiteralDeclaration getVITAMIN_AEnumLiteralDeclaration_0() { return cVITAMIN_AEnumLiteralDeclaration_0; }
		
		//'VITAMIN_A'
		public Keyword getVITAMIN_AVITAMIN_AKeyword_0_0() { return cVITAMIN_AVITAMIN_AKeyword_0_0; }
		
		//VITAMIN_B1 = 'VITAMIN_B1'
		public EnumLiteralDeclaration getVITAMIN_B1EnumLiteralDeclaration_1() { return cVITAMIN_B1EnumLiteralDeclaration_1; }
		
		//'VITAMIN_B1'
		public Keyword getVITAMIN_B1VITAMIN_B1Keyword_1_0() { return cVITAMIN_B1VITAMIN_B1Keyword_1_0; }
		
		//VITAMIN_B2 = 'VITAMIN_B2'
		public EnumLiteralDeclaration getVITAMIN_B2EnumLiteralDeclaration_2() { return cVITAMIN_B2EnumLiteralDeclaration_2; }
		
		//'VITAMIN_B2'
		public Keyword getVITAMIN_B2VITAMIN_B2Keyword_2_0() { return cVITAMIN_B2VITAMIN_B2Keyword_2_0; }
		
		//VITAMIN_B3 = 'VITAMIN_B3'
		public EnumLiteralDeclaration getVITAMIN_B3EnumLiteralDeclaration_3() { return cVITAMIN_B3EnumLiteralDeclaration_3; }
		
		//'VITAMIN_B3'
		public Keyword getVITAMIN_B3VITAMIN_B3Keyword_3_0() { return cVITAMIN_B3VITAMIN_B3Keyword_3_0; }
		
		//VITAMIN_B5 = 'VITAMIN_B5'
		public EnumLiteralDeclaration getVITAMIN_B5EnumLiteralDeclaration_4() { return cVITAMIN_B5EnumLiteralDeclaration_4; }
		
		//'VITAMIN_B5'
		public Keyword getVITAMIN_B5VITAMIN_B5Keyword_4_0() { return cVITAMIN_B5VITAMIN_B5Keyword_4_0; }
		
		//VITAMIN_B6 = 'VITAMIN_B6'
		public EnumLiteralDeclaration getVITAMIN_B6EnumLiteralDeclaration_5() { return cVITAMIN_B6EnumLiteralDeclaration_5; }
		
		//'VITAMIN_B6'
		public Keyword getVITAMIN_B6VITAMIN_B6Keyword_5_0() { return cVITAMIN_B6VITAMIN_B6Keyword_5_0; }
		
		//VITAMIN_B12 = 'VITAMIN_B12'
		public EnumLiteralDeclaration getVITAMIN_B12EnumLiteralDeclaration_6() { return cVITAMIN_B12EnumLiteralDeclaration_6; }
		
		//'VITAMIN_B12'
		public Keyword getVITAMIN_B12VITAMIN_B12Keyword_6_0() { return cVITAMIN_B12VITAMIN_B12Keyword_6_0; }
		
		//VITAMIN_C = 'VITAMIN_C'
		public EnumLiteralDeclaration getVITAMIN_CEnumLiteralDeclaration_7() { return cVITAMIN_CEnumLiteralDeclaration_7; }
		
		//'VITAMIN_C'
		public Keyword getVITAMIN_CVITAMIN_CKeyword_7_0() { return cVITAMIN_CVITAMIN_CKeyword_7_0; }
		
		//VITAMIN_E = 'VITAMIN_E'
		public EnumLiteralDeclaration getVITAMIN_EEnumLiteralDeclaration_8() { return cVITAMIN_EEnumLiteralDeclaration_8; }
		
		//'VITAMIN_E'
		public Keyword getVITAMIN_EVITAMIN_EKeyword_8_0() { return cVITAMIN_EVITAMIN_EKeyword_8_0; }
		
		//VITAMIN_K = 'VITAMIN_K'
		public EnumLiteralDeclaration getVITAMIN_KEnumLiteralDeclaration_9() { return cVITAMIN_KEnumLiteralDeclaration_9; }
		
		//'VITAMIN_K'
		public Keyword getVITAMIN_KVITAMIN_KKeyword_9_0() { return cVITAMIN_KVITAMIN_KKeyword_9_0; }
	}
	
	private final PageElements pPage;
	private final InstructionsElements pInstructions;
	private final IngredientsElements pIngredients;
	private final HeaderElements pHeader;
	private final EStringElements pEString;
	private final NutrientsElements pNutrients;
	private final EIntElements pEInt;
	private final UnitOfMeasureElements pUnitOfMeasure;
	private final BasicInformationElements pBasicInformation;
	private final TitleElements pTitle;
	private final ImageElements pImage;
	private final PercentageAmountToggleElements pPercentageAmountToggle;
	private final VitaminsElements pVitamins;
	private final MacronutrientsElements pMacronutrients;
	private final VitaminElements eVitamin;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public RecipeDSLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPage = new PageElements();
		this.pInstructions = new InstructionsElements();
		this.pIngredients = new IngredientsElements();
		this.pHeader = new HeaderElements();
		this.pEString = new EStringElements();
		this.pNutrients = new NutrientsElements();
		this.pEInt = new EIntElements();
		this.pUnitOfMeasure = new UnitOfMeasureElements();
		this.pBasicInformation = new BasicInformationElements();
		this.pTitle = new TitleElements();
		this.pImage = new ImageElements();
		this.pPercentageAmountToggle = new PercentageAmountToggleElements();
		this.pVitamins = new VitaminsElements();
		this.pMacronutrients = new MacronutrientsElements();
		this.eVitamin = new VitaminElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("no.ntnu.tdt4250.recipe.dsl.RecipeDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Page returns Page:
	//    'Page'
	//    name=EString
	//    '{'
	//        // Using & to create an unordered group
	//        (
	//            ('instructions' instructions=Instructions) &
	//            ('ingredients' ingredients=Ingredients) &
	//            ('header' header=Header) &
	//            ('nutrients' nutrients=Nutrients)?
	//        )
	//    '}';
	public PageElements getPageAccess() {
		return pPage;
	}
	
	public ParserRule getPageRule() {
		return getPageAccess().getRule();
	}
	
	//Instructions returns Instructions:
	//    'Instructions'
	//    '{'
	//        'orderNumber' orderNumber=EInt
	//    '}';
	public InstructionsElements getInstructionsAccess() {
		return pInstructions;
	}
	
	public ParserRule getInstructionsRule() {
		return getInstructionsAccess().getRule();
	}
	
	//Ingredients returns Ingredients:
	//    'Ingredients'
	//    '{'
	//        // Using & for unordered elements
	//        (
	//            ('orderNumber' orderNumber=EInt) &
	//            ('unittoggle' unittoggle=UnitOfMeasure)?
	//        )
	//    '}';
	public IngredientsElements getIngredientsAccess() {
		return pIngredients;
	}
	
	public ParserRule getIngredientsRule() {
		return getIngredientsAccess().getRule();
	}
	
	//Header returns Header:
	//    'Header'
	//    '{'
	//        // Using & for unordered elements
	//        (
	//            ('basicinformation' basicinformation=BasicInformation) &
	//            ('recipetitle' recipetitle=Title) &
	//            ('image' image=Image)?
	//        )
	//    '}';
	public HeaderElements getHeaderAccess() {
		return pHeader;
	}
	
	public ParserRule getHeaderRule() {
		return getHeaderAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Nutrients returns Nutrients:
	//    'Nutrients'
	//    '{'
	//        // Using & for unordered elements
	//        (
	//            ('orderNumber' orderNumber=EInt) &
	//            ('percentagetoggle' percentagetoggle=PercentageAmountToggle)? &
	//            ('vitamins' vitamins=Vitamins)? &
	//            ('macronutrients' macronutrients=Macronutrients)?
	//        )
	//    '}';
	public NutrientsElements getNutrientsAccess() {
		return pNutrients;
	}
	
	public ParserRule getNutrientsRule() {
		return getNutrientsAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//UnitOfMeasure returns UnitOfMeasure:
	//    {UnitOfMeasure}
	//    'UnitOfMeasure';
	public UnitOfMeasureElements getUnitOfMeasureAccess() {
		return pUnitOfMeasure;
	}
	
	public ParserRule getUnitOfMeasureRule() {
		return getUnitOfMeasureAccess().getRule();
	}
	
	//BasicInformation returns BasicInformation:
	//    {BasicInformation}
	//    'BasicInformation';
	public BasicInformationElements getBasicInformationAccess() {
		return pBasicInformation;
	}
	
	public ParserRule getBasicInformationRule() {
		return getBasicInformationAccess().getRule();
	}
	
	//Title returns Title:
	//    {Title}
	//    'Title';
	public TitleElements getTitleAccess() {
		return pTitle;
	}
	
	public ParserRule getTitleRule() {
		return getTitleAccess().getRule();
	}
	
	//Image returns Image:
	//    {Image}
	//    'Image';
	public ImageElements getImageAccess() {
		return pImage;
	}
	
	public ParserRule getImageRule() {
		return getImageAccess().getRule();
	}
	
	//PercentageAmountToggle returns PercentageAmountToggle:
	//    {PercentageAmountToggle}
	//    'PercentageAmountToggle';
	public PercentageAmountToggleElements getPercentageAmountToggleAccess() {
		return pPercentageAmountToggle;
	}
	
	public ParserRule getPercentageAmountToggleRule() {
		return getPercentageAmountToggleAccess().getRule();
	}
	
	//Vitamins returns Vitamins:
	//    'Vitamins'
	//    '{'
	//        'Vitamin' '{' Vitamin+=Vitamin ( "," Vitamin+=Vitamin)* '}'
	//    '}';
	public VitaminsElements getVitaminsAccess() {
		return pVitamins;
	}
	
	public ParserRule getVitaminsRule() {
		return getVitaminsAccess().getRule();
	}
	
	//Macronutrients returns Macronutrients:
	//    {Macronutrients}
	//    'Macronutrients';
	public MacronutrientsElements getMacronutrientsAccess() {
		return pMacronutrients;
	}
	
	public ParserRule getMacronutrientsRule() {
		return getMacronutrientsAccess().getRule();
	}
	
	//enum Vitamin returns Vitamin:
	//    VITAMIN_A = 'VITAMIN_A' |
	//    VITAMIN_B1 = 'VITAMIN_B1' |
	//    VITAMIN_B2 = 'VITAMIN_B2' |
	//    VITAMIN_B3 = 'VITAMIN_B3' |
	//    VITAMIN_B5 = 'VITAMIN_B5' |
	//    VITAMIN_B6 = 'VITAMIN_B6' |
	//    VITAMIN_B12 = 'VITAMIN_B12' |
	//    VITAMIN_C = 'VITAMIN_C' |
	//    VITAMIN_E = 'VITAMIN_E' |
	//    VITAMIN_K = 'VITAMIN_K';
	public VitaminElements getVitaminAccess() {
		return eVitamin;
	}
	
	public EnumRule getVitaminRule() {
		return getVitaminAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
